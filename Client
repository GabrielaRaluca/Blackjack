import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;


public class client implements Runnable {

    private static String IP;
    private static int port;
    private static Socket socket;
    private static ObjectInputStream input;
    private static ObjectOutputStream output;
    private static String message;

    client(){

    }

    public static void connectToServer() {
        System.out.println("Attempting connection...\n");
        try {
            socket = new Socket(IP, port);
            System.out.println("Connected to server\n");
        } catch (UnknownHostException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public static void setUpStreams() {
        try {
            output = new ObjectOutputStream(socket.getOutputStream());
            output.flush();
            input = new ObjectInputStream(socket.getInputStream());
            System.out.println("Streams are up\n");
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public void run() {
        // TODO Auto-generated method stub
        try {
            while (!(message = (String) input.readObject()).equals("Game finished"))
            {
                System.out.println(message);
            }
        } catch (ClassNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public static void sendMessage(String message) {
        try {
            output.writeObject(message);
            output.flush();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

    }

    public static void close() {
        try
        {
            output.close();
            input.close();
            socket.close();
        }
        catch(IOException e)
        {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        IP = "localhost";
        port = 9999;

        connectToServer();
        setUpStreams();

        Thread thread = new Thread(new client());
        thread.start();

        Scanner input = new Scanner(System.in);
        message = "";
        while (!message.equals("Game finished"))
        {
            String line = input.nextLine();
            sendMessage(line);
        }

        close();


    }
    
}


